/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.fr.commons;

import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JRootPane;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

public class JavaCalendarDlg extends javax.swing.JDialog {

    private final Calendar calendar = Calendar.getInstance();
    
    private JTextField dateTextField;
    private String dateFormat = Constantes.DEFAULT_DATE_FORMAT;
    
    public JavaCalendarDlg(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        setUndecorated(true);
        initComponents();
        setSize(330, 285);
        
        btnPreviousMonth.setIcon(new ImageIcon(getClass().getResource(BaseParameters.getInstance().getLibImgPath() + "keyboard_arrow_left.png")));
        btnNextMonth.setIcon(new ImageIcon(getClass().getResource(BaseParameters.getInstance().getLibImgPath() + "keyboard_arrow_right.png")));
    }
    
    public void setDateTextField(JTextField dateTextField) {
        this.dateTextField = dateTextField;
    }
    
    public void setDateFormat(String dateFormat) {
        this.dateFormat = dateFormat;
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnPreviousMonth = new javax.swing.JButton();
        cmbMonth = new javax.swing.JComboBox();
        btnNextMonth = new javax.swing.JButton();
        spinYear = new javax.swing.JSpinner();
        pnlTop = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        pnlBottom = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        btnPreviousMonth.setPreferredSize(new java.awt.Dimension(25, 25));
        btnPreviousMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousMonthActionPerformed(evt);
            }
        });
        btnPreviousMonth.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnPreviousMonthKeyPressed(evt);
            }
        });

        cmbMonth.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cmbMonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Janeiro", "Fevereiro", "Mar√ßo", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro" }));
        cmbMonth.setPreferredSize(new java.awt.Dimension(56, 25));
        cmbMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMonthActionPerformed(evt);
            }
        });
        cmbMonth.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbMonthKeyPressed(evt);
            }
        });

        btnNextMonth.setPreferredSize(new java.awt.Dimension(25, 25));
        btnNextMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextMonthActionPerformed(evt);
            }
        });
        btnNextMonth.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnNextMonthKeyPressed(evt);
            }
        });

        spinYear.setPreferredSize(new java.awt.Dimension(29, 25));
        spinYear.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinYearStateChanged(evt);
            }
        });
        spinYear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                spinYearKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnPreviousMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbMonth, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spinYear, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNextMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNextMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(spinYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnPreviousMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnNextMonth, btnPreviousMonth, cmbMonth, spinYear});

        pnlTop.setLayout(new java.awt.GridLayout(1, 7));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("D");
        jButton1.setEnabled(false);
        pnlTop.add(jButton1);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setText("S");
        jButton2.setEnabled(false);
        pnlTop.add(jButton2);

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton3.setText("T");
        jButton3.setEnabled(false);
        pnlTop.add(jButton3);

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton4.setText("Q");
        jButton4.setEnabled(false);
        pnlTop.add(jButton4);

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton5.setText("Q");
        jButton5.setEnabled(false);
        pnlTop.add(jButton5);

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton6.setText("S");
        jButton6.setEnabled(false);
        pnlTop.add(jButton6);

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton7.setText("S");
        jButton7.setEnabled(false);
        pnlTop.add(jButton7);

        pnlBottom.setLayout(new java.awt.GridLayout(6, 1));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBottom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlBottom, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPreviousMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousMonthActionPerformed

        if (cmbMonth.getSelectedIndex() == 0) {
            cmbMonth.setSelectedIndex(cmbMonth.getModel().getSize() - 1);
            
            spinYear.getModel().setValue(((SpinnerNumberModel) spinYear.getModel()).getPreviousValue());
            
            int year = Integer.valueOf(((SpinnerNumberModel) spinYear.getModel()).getValue().toString());
            calendar.set(Calendar.YEAR, year);
        } else {
            cmbMonth.setSelectedIndex(cmbMonth.getSelectedIndex() - 1);
        }
        
    }//GEN-LAST:event_btnPreviousMonthActionPerformed

    private void btnNextMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextMonthActionPerformed
        if (cmbMonth.getSelectedIndex() == (cmbMonth.getModel().getSize() - 1)) {
            cmbMonth.setSelectedIndex(0);
            
            spinYear.getModel().setValue(((SpinnerNumberModel) spinYear.getModel()).getNextValue());
            
            int year = Integer.valueOf(((SpinnerNumberModel) spinYear.getModel()).getValue().toString());
            calendar.set(Calendar.YEAR, year);
        } else {
            cmbMonth.setSelectedIndex(cmbMonth.getSelectedIndex() + 1);
        }
        
    }//GEN-LAST:event_btnNextMonthActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        exit(evt);
    }//GEN-LAST:event_formKeyPressed

    private void btnPreviousMonthKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnPreviousMonthKeyPressed
        exit(evt);
    }//GEN-LAST:event_btnPreviousMonthKeyPressed

    private void cmbMonthKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbMonthKeyPressed
        exit(evt);
    }//GEN-LAST:event_cmbMonthKeyPressed

    private void spinYearKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_spinYearKeyPressed
        exit(evt);
    }//GEN-LAST:event_spinYearKeyPressed

    private void btnNextMonthKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnNextMonthKeyPressed
        exit(evt);
    }//GEN-LAST:event_btnNextMonthKeyPressed

    private void spinYearStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinYearStateChanged

    }//GEN-LAST:event_spinYearStateChanged

    private void cmbMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMonthActionPerformed
        calendar.set(Calendar.MONTH, cmbMonth.getSelectedIndex());
        updateCalendarUI();
    }//GEN-LAST:event_cmbMonthActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNextMonth;
    private javax.swing.JButton btnPreviousMonth;
    private javax.swing.JComboBox cmbMonth;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel pnlBottom;
    private javax.swing.JPanel pnlTop;
    private javax.swing.JSpinner spinYear;
    // End of variables declaration//GEN-END:variables

    public void exit(KeyEvent evt) {
        
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            dispose();
        }
    }
    public void init() {
        setDefaultLookAndFeelDecorated(false);
        getRootPane().setWindowDecorationStyle(JRootPane.NONE);
        ((JPanel)getContentPane()).setBorder(BorderFactory.createLineBorder(Color.BLUE));
        
        DefaultComboBoxModel cmbModel = new DefaultComboBoxModel();
        
        for (String month : Utils.getMonthStrings()) {
            cmbModel.addElement(month.trim());
        }
        
        cmbMonth.setModel(cmbModel);
        cmbMonth.setSelectedIndex(calendar.get(Calendar.MONTH));
        
        int currentYear = calendar.get(Calendar.YEAR);
        SpinnerModel yearModel = new SpinnerNumberModel(currentYear, //initial value
                                       currentYear - 100, //min
                                       currentYear + 100, //max
                                       1);
        
        spinYear.setModel(yearModel);
        spinYear.setEditor(new JSpinner.NumberEditor(spinYear, "#"));

        spinYear.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                int year = Integer.valueOf(((SpinnerNumberModel) spinYear.getModel()).getValue().toString());
                calendar.set(Calendar.YEAR, year);
                updateCalendarUI();
            }
        });
        
        updateCalendarUI();
        
    }
    
    public void updateCalendarUI() {
        DecimalFormat df = new DecimalFormat("00");
        SimpleDateFormat sdf = new SimpleDateFormat((dateFormat == null)? "yyyy/MM/dd": dateFormat);
        
        calendar.set(Calendar.DAY_OF_MONTH, 1);
        int currentMonth = calendar.get(Calendar.MONTH);
        int currentYear = calendar.get(Calendar.YEAR);
        
        pnlBottom.removeAll();
        pnlBottom.invalidate();pnlBottom.repaint();
        
        int colCounter = 0;
        JPanel p = null;
                
        do {
            
            if ((colCounter % 7) == 0) {
                p = new JPanel();
                p.setLayout(new GridLayout(1, 7));
                pnlBottom.add(p);
                if (colCounter != 0) {
                    //break;
                }
                colCounter = 0;
            }
            
            if (calendar.get(Calendar.DAY_OF_MONTH) == 1) {
                int dayOfWeek = 1;
                
                while (dayOfWeek < calendar.get(Calendar.DAY_OF_WEEK)) {
                    JButton btn = new JButton();
                    btn.setSize(5, 5);
                    btn.setEnabled(false);
                    btn.setBorderPainted(false);
                    btn.setBorder(null);
                    btn.setContentAreaFilled(false);
                    p.add(btn);
                    colCounter++;
                    dayOfWeek++;
                }
            }
            
            JButton btn = new JButton(df.format(calendar.get(Calendar.DAY_OF_MONTH)));
            btn.setBackground(Color.white);
            btn.setForeground(Color.black);
            btn.setBorderPainted(false);
            btn.setBorder(null);
            btn.setContentAreaFilled(false);
            btn.setSize(5, 5);
            btn.setFocusable(false);
            btn.setName(sdf.format(calendar.getTime()));
            
            if (Utils.DATE_FORMAT_BR.format(calendar.getTime()).equals(Utils.DATE_FORMAT_BR.format(new Date()))) {
                btn.setForeground(Color.RED);
            }
            
            btn.addActionListener(new ActionListener() {

                @Override
                public void actionPerformed(ActionEvent e) {
                    JButton btn = (JButton) e.getSource();
                    
                    if (dateTextField != null) {
                        dateTextField.setText(btn.getName());
                        dateTextField.requestFocus();
                    }
                    
                    dispose();
                }
            });
            colCounter++;
            p.add(btn);    
            
            calendar.add(Calendar.DAY_OF_MONTH, 1);
        } while (calendar.get(Calendar.MONTH) == currentMonth);
        
        int dayOfWeek = calendar.get(Calendar.DAY_OF_WEEK);
        while ((dayOfWeek > 1) &&(dayOfWeek <= 7)) {
            JButton btn = new JButton();
            btn.setSize(5, 5);
            btn.setEnabled(false);
            btn.setBorderPainted(false);
            btn.setBorder(null);
            btn.setContentAreaFilled(false);
            p.add(btn);
            dayOfWeek++;
        }
        
        calendar.set(Calendar.MONTH, currentMonth);
        calendar.set(Calendar.YEAR, currentYear);
        
        pnlBottom.revalidate();
        pnlBottom.repaint();
    }
}
